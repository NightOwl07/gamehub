{"version":3,"sources":["alt/alt.ts","Modules/AuthModule/Enums/AuthState.ts","Modules/AuthModule/RegisterForm.tsx","Modules/AuthModule/LoginForm.tsx","Base/BaseModule.ts","Modules/AuthModule/WelcomeForm.tsx","Modules/InventoryModule/InventoryModule.tsx","main.tsx","Modules/NotificationModule/NotificationModule.tsx","index.tsx"],"names":["alt","window","on","event","callback","emit","AuthState","RegisterForm","props","state","account","username","email","password","passwordrepeat","errorMessage","isLoading","className","this","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","type","placeholder","onChange","e","setState","target","value","onPasswordUnfocused","bind","onBlur","onCheckPasswordRepeat","onClick","onNavigateForward","onNavigateBack","length","React","Component","LoginForm","onLogin","onStopLoading","BaseModule","moduleName","moduleInit","WelcomeForm","authState","Welcome","style","maxWidth","maxHeight","src","onLoginButtonClick","onRegisterButtonClick","Register","onNavigateToWelcomeForm","onNavigateForwardParent","Login","InventoryModule","items","Id","Name","Quantity","maxSlots","maxRows","layout","generateLayout","console","log","cols","width","containerPadding","onDragStart","map","item","i","x","y","w","h","toString","isBounded","Error","Components","name","component","notifications","notification","animateClass","animate","Math","random","stroke","title","message","newNotification","duration","inNotification","prevState","setTimeout","filter","n","Main","modules","Module","find","m","onShowModule","onHideModule","module","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7854af61.chunk.js","sourcesContent":["let alt: any = null;\n\nif ('alt' in window) {\n    alt = window[\"alt\" as any];\n} else {\n    alt = {\n        on: (event: string, callback: (...args: any[]) => void) => { },\n        emit: (event: string, ...args: any[]) => { }\n    };\n}\n\nexport { alt };","export enum AuthState {\r\n    None = 0,\r\n    Welcome = 1,\r\n    Register = 2,\r\n    Login = 3\r\n}","import React from 'react';\r\nimport { alt } from '../../alt/alt';\r\nimport './AuthModule.css';\r\n\r\ninterface IAccount {\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface RegisterFormProps {\r\n    onNavigateBack(): void;\r\n    onNavigateForwardParent(): void;\r\n}\r\n\r\ninterface RegisterFormState {\r\n    account: IAccount;\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    passwordrepeat: string;\r\n    errorMessage: string;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport default class RegisterForm extends React.Component<RegisterFormProps, RegisterFormState> {\r\n    constructor(props: RegisterFormProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            account: {\r\n                username: \"\",\r\n                email: \"\",\r\n                password: \"\"\r\n            },\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordrepeat: \"\",\r\n            errorMessage: \"\",\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"flex items-center justify-center h-screen\">\r\n                <div className=\"login card bordered w-96\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"card-title\">Registrierung</h2>\r\n\r\n                        {this.state.errorMessage &&\r\n                            <div className=\"alert alert-error\">\r\n                                <div className=\"flex-1\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"></path>\r\n                                    </svg>\r\n                                    <label>{this.state.errorMessage}</label>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {this.state.isLoading &&\r\n                            <div className=\"pulse-container\">\r\n                                <div className=\"pulse-bubble pulse-bubble-1\"></div>\r\n                                <div className=\"pulse-bubble pulse-bubble-2\"></div>\r\n                                <div className=\"pulse-bubble pulse-bubble-3\"></div>\r\n                            </div>\r\n                        }\r\n\r\n                        {!this.state.isLoading &&\r\n                            <>\r\n                                <label className=\"label\">\r\n                                    <span className=\"label-text\">Username</span>\r\n                                </label>\r\n                                <input type=\"text\" placeholder=\"Username\" onChange={(e) => this.setState({ username: e.target.value })} className=\"input\" />\r\n\r\n                                <label className=\"label\">\r\n                                    <span className=\"label-text\">Email</span>\r\n                                </label>\r\n                                <input type=\"email\" placeholder=\"Email\" onChange={(e) => this.setState({ email: e.target.value })} className=\"input\" />\r\n\r\n                                <label className=\"label\">\r\n                                    <span className=\"label-text\">Passwort</span>\r\n                                </label>\r\n                                <input type=\"password\" placeholder=\"Passwort\" onChange={this.onPasswordUnfocused.bind(this)} className=\"input\" />\r\n\r\n                                <label className=\"label\">\r\n                                    <span className=\"label-text\">Passwort (wdh.)</span>\r\n                                </label>\r\n                                <input type=\"password\" placeholder=\"Passwort (wdh.)\" onBlur={this.onCheckPasswordRepeat.bind(this)} className=\"input\" />\r\n\r\n                                <div className=\"card-actions w-full items-end\">\r\n                                    <button onClick={this.onNavigateForward.bind(this)} className=\"btn btn-primary\">Weiter</button>\r\n                                    <button onClick={this.props.onNavigateBack} className=\"btn btn-ghost\">Zurück</button>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.setState({ isLoading: false });\r\n    }\r\n\r\n    public onNavigateForward() {\r\n        if (this.state.errorMessage !== \"\") {\r\n            return;\r\n        }\r\n\r\n        if (this.state.email === \"\" || this.state.username === \"\" || this.state.password === \"\" || this.state.password !== this.state.passwordrepeat) {\r\n            this.setState({ errorMessage: \"Es müssen alle Felder korrekt ausgefüllt sein!\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        // this.props.onNavigateForwardParent();\r\n        alt.emit(\"TTT:RegisterView:RegisterComplete\", this.state.email, this.state.username, this.state.password);\r\n    }\r\n\r\n    public onPasswordUnfocused(e: any) {\r\n        if (e.target.value.length < 8) {\r\n            this.setState({ errorMessage: \"Passwort muss mindestens 8 Zeichen lang sein!\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ password: e.target.value, errorMessage: \"\" });\r\n    }\r\n\r\n    public onCheckPasswordRepeat(e: any) {\r\n        if (this.state.password !== e.target.value) {\r\n            this.setState({ errorMessage: \"Passwörter stimmen nicht überein!\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ passwordrepeat: e.target.value, errorMessage: \"\" });\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { alt } from '../../alt/alt';\r\nimport './AuthModule.css';\r\n\r\ninterface LoginFormProps {\r\n    onLogin(username: string, password: string): void;\r\n}\r\n\r\ninterface LoginFormState {\r\n    username: string;\r\n    password: string;\r\n    errorMessage: string;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport default class LoginForm extends React.Component<LoginFormProps, LoginFormState> {\r\n    constructor(props: LoginFormProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errorMessage: \"\",\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"flex items-center justify-center h-screen\">\r\n                <div className=\"login card bordered w-96\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"card-title\">Login</h2>\r\n\r\n                        {this.state.errorMessage &&\r\n                            <div className=\"alert alert-error\">\r\n                                <div className=\"flex-1\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"></path>\r\n                                    </svg>\r\n                                    <label>{this.state.errorMessage}</label>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {this.state.isLoading &&\r\n                            <div className=\"pulse-container\">\r\n                                <div className=\"pulse-bubble pulse-bubble-1\"></div>\r\n                                <div className=\"pulse-bubble pulse-bubble-2\"></div>\r\n                                <div className=\"pulse-bubble pulse-bubble-3\"></div>\r\n                            </div>\r\n                        }\r\n\r\n                        {!this.state.isLoading &&\r\n                            <>\r\n                                <label className=\"label\">\r\n                                    <span className=\"label-text\">Username</span>\r\n                                </label>\r\n                                <input type=\"text\" placeholder=\"Username o. Email\" onBlur={(e) => this.setState({ username: e.target.value })} className=\"input\" />\r\n\r\n                                <label className=\"label\">\r\n                                    <span className=\"label-text\">Passwort</span>\r\n                                </label>\r\n                                <input type=\"password\" placeholder=\"Passwort\" onBlur={(e) => this.setState({ password: e.target.value })} className=\"input\" />\r\n\r\n                                <div className=\"card-actions w-full items-end\">\r\n                                    <button onClick={this.onLogin.bind(this)} className=\"btn btn-primary\">Weiter</button>\r\n                                </div>\r\n                            </>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public componentDidMount() {\r\n        alt.on(\"TTT:LoginView:StopLoading\", this.onStopLoading.bind(this));\r\n        this.setState({ isLoading: false });\r\n    }\r\n\r\n    public onLogin() {\r\n        if (this.state.password === \"\" || this.state.username === \"\") {\r\n            this.setState({ errorMessage: \"Alle Felder müssen korrekt ausgefüllt sein!\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true, errorMessage: \"\" });\r\n\r\n        alt.emit(\"TTT:LoginView:LoginComplete\", this.state.username, this.state.password);\r\n    }\r\n\r\n    public onStopLoading() {\r\n        this.setState({ isLoading: false });\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { alt } from '../alt/alt';\r\n\r\nexport abstract class BaseModule<P = {}, S = {}, SS = {}> extends React.Component<P, S, SS> {\r\n    abstract moduleName: string;\r\n\r\n    abstract moduleInit(): void;\r\n\r\n    public componentDidMount() {\r\n        this.moduleInit();\r\n\r\n        alt.emit(\"TTT:View:ModuleMounted\", this.moduleName);\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        alt.emit(\"TTT:View:ModuleUnmouted\", this.moduleName);\r\n    }\r\n}","import React from 'react';\nimport './AuthModule.css';\nimport { AuthState } from \"./Enums/AuthState\";\nimport RegisterForm from \"./RegisterForm\";\nimport LoginForm from \"./LoginForm\";\nimport { BaseModule } from '../../Base/BaseModule';\n\ninterface AuthModuleProps { }\n\ninterface AuthModuleState {\n    authState: AuthState;\n}\n\nexport default class WelcomeForm extends BaseModule<AuthModuleProps, AuthModuleState> {\n    public moduleName: string;\n\n    constructor(props: AuthModuleProps) {\n        super(props);\n\n        this.moduleName = \"welcome\";\n\n        this.state = {\n            authState: AuthState.Welcome\n        }\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"flex items-center justify-center h-screen\">\n                {this.state.authState === AuthState.Welcome &&\n                    <div className=\"login card lg:card-side bordered w-1/2\">\n                        <figure>\n                            <img alt=\"just a cat\" style={{ maxWidth: \"350px\", maxHeight: \"100%\" }} src=\"https://images.unsplash.com/photo-1568307970720-a8c50b644a7c?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8c2NhcmVkJTIwY2F0fGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80\" />\n                        </figure>\n                        <div className=\"card-body\">\n                            <h2 className=\"card-title\">Willkommen auf TTT</h2>\n                            <p>Was möchtest du tun? Rechts eventuell News anzeigen lassen? Idk.</p>\n                            <p>Du hurensohn.</p>\n                            <div className=\"card-actions\">\n                                <button onClick={this.onLoginButtonClick.bind(this)} className=\"btn btn-primary\">Login</button>\n                                <button onClick={this.onRegisterButtonClick.bind(this)} className=\"btn btn-ghost\">Register</button>\n                            </div>\n                        </div>\n                    </div>\n                }\n                {this.state.authState === AuthState.Register && \n                    <RegisterForm onNavigateBack={this.onNavigateToWelcomeForm.bind(this)} onNavigateForwardParent={this.onNavigateForward.bind(this)}></RegisterForm>\n                }\n                {this.state.authState === AuthState.Login && \n                    <LoginForm onLogin={this.onLogin.bind(this)}></LoginForm>\n                }\n            </div>\n        );\n    }\n\n    public moduleInit(): void {\n    }\n\n    public onLoginButtonClick() {\n        this.setState({authState: AuthState.Login});\n    }\n\n    public onRegisterButtonClick() {\n        this.setState({authState: AuthState.Register});\n    }\n\n    public onNavigateForward() {\n        if(this.state.authState === AuthState.Register) {\n            this.setState({authState: AuthState.Login}); // after time, replace with \"characterselection\"\n        }\n        else {\n            this.setState({authState: AuthState.Welcome});\n        }\n    }\n\n    public onNavigateToWelcomeForm() {\n        this.setState({authState: AuthState.Welcome});\n    }\n\n    public onLogin() {\n\n    }\n}\n\n","import React from 'react';\nimport ResponsiveGridLayout from 'react-grid-layout';\nimport { BaseModule } from '../../Base/BaseModule';\nimport './InventoryModule.css';\n\ninterface InventoryModuleProps { }\n\ninterface InventoryModuleState {\n    items: any[];\n    maxSlots: number;\n    maxRows: number;\n}\n\nexport default class InventoryModule extends BaseModule<InventoryModuleProps, InventoryModuleState> {\n    public moduleName: string;\n\n    constructor(props: InventoryModuleProps) {\n        super(props);\n\n        this.moduleName = \"inventory\";\n\n        this.state = {\n            items: [\n                {\n                    Id: 1,\n                    Name: \"TestBla\",\n                    Quantity: 10\n                },\n                {\n                    Id: 2,\n                    Name: \"test\",\n                    Quantity: 1\n                },\n                {\n                    Id: 3,\n                    Name: \"basd\",\n                    Quantity: 5\n                },\n                {\n                    Id: 4,\n                    Name: \"fdsgfgd\",\n                    Quantity: 8\n                },\n                {\n                    Id: 5,\n                    Name: \"zutruetz\",\n                    Quantity: 15\n                },\n                {\n                    Id: 6,\n                    Name: \"vcbncvbn\",\n                    Quantity: 105\n                },\n            ],\n            maxSlots: 25,\n            maxRows: 5\n        }\n    }\n\n    public render(): JSX.Element {\n        var layout = this.generateLayout();\n        console.log(layout);\n        return (\n            <div className=\"flex items-center justify-center h-screen\">\n                <div className=\"inventory card text-center shadow-2xl\">\n                    <ResponsiveGridLayout className=\"layout\" layout={layout} cols={6} width={500} containerPadding={[25, 25]} onDragStart={() => { console.log(\"layout changed\") }}>\n                        {\n                            this.state.items.map(item => {\n                                return (\n                                    <div key={item.Id} className=\"bg-red-600\">\n                                        <span className=\"text\">{item.Name}</span>\n                                    </div>\n                                );\n                            })\n                        }\n                    </ResponsiveGridLayout>\n                </div>\n            </div >\n        );\n    }\n\n    generateLayout() {\n        return this.state.items.map((item, i) => {\n            return {\n                x: (i * 2) % 8,\n                y: (i * 2) % 8,\n                w: 2,\n                h: 1,\n                i: (i + 1).toString(),\n                isBounded: true,\n            };\n        });\n    }\n\n    public moduleInit(): void {\n        throw new Error('Module not implemented.');\n    }\n}\n\n","import React from \"react\";\r\nimport \"./alt/alt\";\r\nimport { alt } from \"./alt/alt\";\r\nimport WelcomeForm from \"./Modules/AuthModule/WelcomeForm\";\r\nimport InventoryModule from \"./Modules/InventoryModule/InventoryModule\";\r\nimport NotificationModule from \"./Modules/NotificationModule/NotificationModule\";\r\n\r\nexport interface MainProps {\r\n}\r\n\r\ninterface MainState {\r\n    modules: string[];\r\n}\r\n\r\ninterface IPageableComponent {\r\n    name: string;\r\n    component: React.ComponentType;\r\n}\r\n\r\nconst Components: IPageableComponent[] = [\r\n    { name: \"welcome\", component: WelcomeForm },\r\n    { name: \"inventory\", component: InventoryModule },\r\n    { name: \"notification\", component: NotificationModule }\r\n]\r\n\r\n/**\r\n * Component Main\r\n *\r\n * @export\r\n * @class Main\r\n * @extends {React.Component<MainProps, MainState>}\r\n */\r\nexport default class Main extends React.Component<MainProps, MainState> {\r\n    constructor(props: MainProps) {\r\n        super(props);\r\n        this.state = {\r\n            modules: [\"notification\"],\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                {this.state.modules.map((moduleName) => {\r\n                    let Module = Components.find((m) => m.name === moduleName)?.component;\r\n                    if (!Module) {\r\n                        console.log(\"Module can't be resolved\");\r\n                        return null;\r\n                    }\r\n\r\n                    return (\r\n                        <Module key={moduleName} />\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n\r\n    public componentDidMount() {\r\n        alt.on(\"TTT:View:ShowModule\", this.onShowModule.bind(this));\r\n        alt.on(\"TTT:View:HideModule\", this.onHideModule.bind(this));\r\n        alt.emit(\"TTT:View:Ready\");\r\n    }\r\n\r\n    private onShowModule(module: string) {\r\n        console.log(\"new module\", module);\r\n        this.setState(prevState => ({ modules: [...prevState.modules, module] }));\r\n    }\r\n\r\n    private onHideModule(module: string) {\r\n        console.log(\"hide module\", module);\r\n        this.setState(prevState => ({ modules: prevState.modules.filter(m => m !== module) }));\r\n    }\r\n}\r\n","import { BaseModule } from \"../../Base/BaseModule\";\nimport { alt } from '../../alt/alt';\nimport { NotificationType } from \"./Enums/NotificationType\";\nimport \"./NotificationModule.css\"\n\ninterface INotification {\n    title: string;\n    message: string;\n    type: NotificationType;\n    duration: number;\n    animate: boolean;\n}\n\ninterface NotificationModuleProps { }\n\ninterface NotificationModuleState {\n    notifications: INotification[];\n}\n\nexport default class NotificationModule extends BaseModule<NotificationModuleProps, NotificationModuleState> {\n    public moduleName: string;\n\n    constructor(props: NotificationModuleProps) {\n        super(props);\n\n        this.moduleName = \"notifications\";\n\n        this.state = {\n            notifications: []\n        }\n    }\n\n    public render(): JSX.Element {\n        return (\n            <>\n                <div className=\"absolute m-1 top-0 left-0 w-1/4\">\n                    {this.state.notifications.length > 0 && this.state.notifications.map((notification, i) => {\n                        let animateClass = notification.animate ? `animation--${Math.random() * 10 <= 5 ? \"shake\" : \"boom\"}` : '';\n                        \n                        notification.animate = false;\n\n                        return (\n                            <div key={`${Math.random() * 10 + i}`} className={`alert mb-1 ${animateClass}`}>\n                                <div className=\"flex-1\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#009688\" className=\"flex-shrink-0 w-6 h-6 mx-2\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"></path>\n                                    </svg>\n                                    <label>\n                                        <h4>{notification.title}</h4>\n                                        <p className=\"text-sm text-base-content text-opacity-60\">\n                                            {notification.message}\n                                        </p>\n                                    </label>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </>\n        );\n    }\n\n    public moduleInit() {\n        alt.on(\"TTT:NotificationView:NewNotification\", this.newNotification.bind(this));\n    }\n\n    public newNotification(type: number, title: string, message: string, duration: number) {\n        let inNotification: INotification = {\n            title: title,\n            message: message,\n            duration: duration,\n            type: type,\n            animate: true\n        }\n\n        this.setState(prevState => ({ notifications: [inNotification, ...prevState.notifications] }));\n\n        setTimeout(() => {\n            this.setState(prevState => ({ notifications: prevState.notifications.filter(n => n !== inNotification) }));\n        }, inNotification.duration);\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}